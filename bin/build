#!/usr/bin/env bash

# Build task

set -e

export LANG="${LANG:-en_US.UTF-8}"
export MIX_ENV="${MIX_ENV:-prod}"

CURDIR="$PWD"
BINDIR=$(dirname "$0")
cd "$BINDIR"; BINDIR="$PWD"; cd "$CURDIR"

DISTILLERY="${DISTILLERY:-false}"
VERSION=$(grep -oEi 'version:\s*\"([^\"]+)\"' mix.exs | grep -oEi '\".+\"' | grep -oEi '[^\"]+')
RELEASE_NAME="${RELEASE_NAME:-prod}"
RELEASE_DIR="${CURDIR}/_build/${MIX_ENV}/rel/${RELEASE_NAME}"
TAR_FILE="${RELEASE_DIR}/releases/${VERSION}/${RELEASE_NAME}.tar.gz"
BASEDIR="$BINDIR/.."
cd "$BASEDIR"

echo "==> Running build task"

echo "===> Updating Elixir libs"
mix deps.get --only "$MIX_ENV"

echo "===> Compiling"
mix compile

echo "===> Installing node modules"
(cd assets && npm install)

echo "===> Generating assets"
(cd assets && npm run deploy)

echo "Building digest files"
mix phx.digest

echo "===> Generating systemd files"
mix systemd.init
mix systemd.generate

echo "===> Generating deploy files"
mix deploy.init
mix deploy.generate

chmod +x bin/*

echo "===> Building release"
# mix release --verbose
# In 1.9.0, the `:default_release` option doesn't work, waiting for the patch
# to get into stable
mix release prod --overwrite

if [ "$DISTILLERY" = false ]; then
  echo "===> Creating a tarball"
  [ -f "${TAR_FILE}" ] && rm "${TAR_FILE}"
  tar -czf "${TAR_FILE}" "${RELEASE_DIR}"/*
fi

echo "Release built!"
