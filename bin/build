#!/usr/bin/env bash

# Build task

set -e

export LANG="${LANG:-en_US.UTF-8}"
export MIX_ENV="${MIX_ENV:-prod}"

CURDIR="$PWD"
BINDIR=$(dirname "$0")
cd "$BINDIR"; BINDIR="$PWD"; cd "$CURDIR"

DISTILLERY="${DISTILLERY:-false}"
VERSION=$(grep -oEi 'version:\s*\"([^\"]+)\"' mix.exs | grep -oEi '\".+\"' | grep -oEi '[^\"]+')
ERTS_VERSION=$(erl -noshell -eval 'io:fwrite("~s\n", [erlang:system_info(version)]).' -s erlang halt)
RELEASE_NAME="${RELEASE_NAME:-mix_deploy_example}"
RELEASE_DIR="_build/${MIX_ENV}/rel/${RELEASE_NAME}"
TARBALL="releases/${VERSION}/${RELEASE_NAME}.tar.gz"
BASEDIR="$BINDIR/.."
cd "$BASEDIR"

export DOMAIN_NAME="${DOMAIN_NAME:-rubegoldberg.io}"
export HOST_NAME="${HOST_NAME:-www}"
export HOST="${HOST_NAME}.${DOMAIN_NAME}"
export ASSETS_HOST="assets.${DOMAIN_NAME}"
export PORT=4000
export HTTPS_PORT=4001

echo "==> Running build task"

echo "===> Installing Hex and Rebar"
mix local.hex --force
mix local.rebar --force

echo "===> Updating Elixir libs"
mix deps.get --only "$MIX_ENV"

echo "===> Compiling"
mix compile

echo "===> Installing node modules"
(cd assets && npm install)

# echo "===> Generating assets"
# # (cd assets && node node_modules/brunch/bin/brunch build)
# # (cd assets && node node_modules/webpack/bin/webpack.js --mode development)
# (cd assets && node node_modules/webpack/bin/webpack.js --mode production)
(cd assets && npm run deploy)

echo "Building digest files"
mix phx.digest

echo "===> Generating systemd files"
mix systemd.init
mix systemd.generate

echo "===> Generating deploy files"
mix deploy.init
mix deploy.generate

chmod +x bin/*

echo "===> Building release"
# mix release --verbose
# mix release
mix distillery.release

# # In 1.9.0, the `:default_release` option doesn't work, waiting for the patch
# # to get into stable
# mix release $RELEASE_NAME --overwrite

# if [ "$DISTILLERY" = false ]; then
#   echo "===> Compressing release"
#   cd "${RELEASE_DIR}"
#   chmod 754 "bin/${RELEASE_NAME}" "releases/${VERSION}"/{elixir,iex} "erts-${ERTS_VERSION}/bin/erl"
#   tar -czf "${TARBALL}" --exclude="${TARBALL}" *
#   echo "Generated release tarball at ${RELEASE_DIR}/${TARBALL}"
# fi
